#
# Configuration
#
[general]
project                  = stm32f7disco
builddir                 = /tmp/build
target                   = $builddir/$project.elf
default                  = $builddir/$project.bin

#
# Build Flag
#
[flags]
target_flags             = --target=thumbv7em-unknown-none-eabi
machine_flags            = -mthumb -march=armv7e-m -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-sp-d16
optimize_flags           = -Og -g3 -ggdb3
dialect_flags            = -std=c11
warning_flags            = -Wall -Wextra
other_flags              = -ffreestanding -ffunction-sections -fdata-sections -fno-strict-aliasing -fdiagnostics-color -pipe -fshort-enums
include_flags            = $_include_flags
define_flags             = -D USE_HAL_DRIVER -D USE_FULL_LL_DRIVER -D STM32F746xx
user_cflags              = -Weverything -Wno-extra-semi-stmt
vendor_cflags            = -Wno-unused-parameter -Wno-parentheses-equality -Wno-sign-compare -Wno-macro-redefined -Wno-ignored-attributes
cflags                   = $target_flags $machine_flags $optimize_flags $dialect_flags $warning_flags $other_flags $define_flags $include_flags
asmflags                 = -g $machine_flags
linker_dir               = ./contrib/linker
linker_file              = ./contrib/linker/stm32f746_itcm.ld
ldflags                  = --gc-sections --print-memory-usage -undefined=uxTopUsedPriority -Map=$builddir/$project.map -L $linker_dir -T $linker_file $_ldflags
debugger_script          = ./contrib/debug/openocd/debug.sh

#
# Build Rule
#
[rules]
compile_user             = clang -MD -MF $out.d $cflags $user_cflags -c $in -o $out
compile_vendor           = clang -MD -MF $out.d $cflags $vendor_cflags -c $in -o $out
assembly                 = arm-none-eabi-as $asmflags -o $out $in
link                     = arm-none-eabi-ld $ldflags -o $out $in $_require_objs
binary                   = arm-none-eabi-objcopy -O binary $in $out
flash                    = openocd -f contrib/debug/openocd/stm32f7disco.cfg -c "program $in verify reset exit 0x08000000"
debug                    = $debugger_script $in
json                     = ninja -t compdb compile_user compile_vendor > compile_commands.json
ctags                    = ctags --languages=Asm,C,C++,CPreProcessor $define_flags --exclude=@.ctagsignore -f $builddir/tags -R `pwd`

#
# Build Target
#
[targets]
$project.bin             = phony $builddir/$project.bin
$builddir/$project.bin   = binary $builddir/$project.elf
flash                    = flash $builddir/$project.bin
debug                    = debug $builddir/$project.elf
json                     = json
ctags                    = ctags

#
# Source Code
#
[user]
type                     = compile_user
include                  = ./include
source                   = ./source/*.c
recursive                = true

[libc]
type                     = compile_user
include                  = ./contrib/libc/include
source                   = ./contrib/libc/source/*.c
recursive                = true

[nvic]
type                     = compile_user
source                   = ./contrib/nvic/*.c

[startup]
type                     = compile_user
source                   = ./contrib/startup/*.c

[cmsis_core]
include                  = ./vendor/CMSIS_Core/Include

[stm32f7_cmsis]
type                     = compile_vendor
include                  = ./vendor/STM32F7xx_CMSIS/Include
source                   = ./vendor/STM32F7xx_CMSIS/Source/*.c

[stm32f7_hal]
type                     = compile_vendor
include                  = ./vendor/STM32F7xx_HAL/Include
source                   = ./vendor/STM32F7xx_HAL/Source/*.c

[stm32f7_hal_config]
include                  = ./vendor/STM32F7xx_HAL/Config

[freertos]
type                     = compile_vendor
include                  = ./vendor/FreeRTOS/Include
source                   = ./vendor/FreeRTOS/Source/*.c

[freertos_config]
type                     = compile_vendor
include                  = ./vendor/FreeRTOS/Config
source                   = ./vendor/FreeRTOS/Config/*.c

[freertos_port]
type                     = compile_vendor
include                  = ./vendor/FreeRTOS/Portable/GCC/ARM_CM7/r0p1
source                   = ./vendor/FreeRTOS/Portable/GCC/ARM_CM7/r0p1/port.c

[freertos_heap]
type                     = compile_vendor
source                   = ./vendor/FreeRTOS/Portable/MemMang/heap_4.c
